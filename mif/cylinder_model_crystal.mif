# MIF 2.1

set pi [expr {4*atan(1.0)}]
set mu0 [expr {4*$pi*1e-7}]
#константы

RandomSeed 1
 # задаются случайные числа
Parameter linkprob 1 
Parameter pbcdir z

Parameter Aconst 0.8e-11
Parameter Kconst 3.0e5
Parameter Hconst 2000
Parameter Hsteps 6000
Parameter Msconst 10e5
Parameter d 10e-9
Parameter Blocksize 5
# что за параметры?

#Parameter cellsize 10e-9
# размер ячейки

Specify Oxs_BoxAtlas:atlas [ subst {
  xrange {0 $d}
  yrange {0 $d}
  zrange {0 [expr {25*$d}]}
}]

# задает размеры параллелепипеда, из которого вырезается образец - атлас
  
proc Cylinder { Ms x y z } {
   set xrad [expr {2.*$x - 1.} ]
   set yrad [expr {2.*$y - 1.} ]
   set test [expr {$xrad*$xrad+$yrad*$yrad}]
    if { $test<1} {return $Ms}
   return 0
}
# вырезает цилиндр - образец
# отступ от края?


Specify Oxs_RectangularMesh:mesh {

  cellsize {10e-9 10e-9 10e-9}
  atlas :atlas
}
# разбиение на ячейки - сетка на образец
#===================================================================

Specify Oxs_UniformExchange [ subst {
  A $Aconst
}]

Specify Oxs_Demag {}

proc RandomVector {} {
   set vx [expr { rand()}]
   set vy [expr { rand()}]
   set vz [expr { rand()}]
   set mod [expr { sqrt($vx*$vx + $vy*$vy + $vz*$vz)}]
   return [list [expr $vx/$mod] [expr $vy/$mod] [expr $vz/$mod]]
}


set orient_count 0
set block_size $Blocksize
set current_vector [RandomVector]

proc Blocks { xrel yrel zrel } {
    global orient_count block_size current_vector
    
    if {$orient_count >=$block_size} {
       set current_vector [RandomVector]
       set orient_count 1
    } else {
       incr orient_count
    }

    return $current_vector
}

Specify Oxs_ScriptVectorField:vectorField {
	    script Blocks
	    norm  1
	    atlas :atlas
}

Specify Oxs_RandomVectorField:rndVectorField {
      min_norm 1.0
      max_norm 1.0
}

Specify Oxs_UniaxialAnisotropy  [ subst {
 K1 $Kconst   
 axis { vectorField }
}]


Specify Oxs_UZeeman [subst {
  multiplier 795.7747154594767
  Hrange {
     {   0   0   0   0 0 $Hconst  $Hsteps }
     {   0   0   $Hconst   0 0 -$Hconst  $Hsteps }
  }
}]


#поле туда и обратно

#====================================================================

Specify Oxs_CGEvolve:evolve {
 energy_precision 1e-10
 method Polak-Ribiere
}

Specify Oxs_MinDriver [subst {
 evolver :evolve
 stopping_mxHxm 0.01
 mesh :mesh
 Ms { Oxs_ScriptScalarField {
       atlas :atlas
       script {Cylinder  $Msconst}
    } } 
 m0 { rndVectorField } 
 
}]

Destination archive   mmArchive

Schedule DataTable archive Stage 1